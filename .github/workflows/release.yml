name: Releases

on: 
  push:
    tags:
    - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always
  WORKSPACE_DIR: ./rust_ws

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ github.ref_name }} -t "Release ${{ github.ref_name }}" --notes-from-tag
  build_and_upload:
    needs: create_release
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: ''
            suffix: linux-x86_64
            cross: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            ext: ''
            suffix: linux-arm64
            cross: true
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: ''
            suffix: mac-arm64
            cross: false
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .exe
            suffix: win-x86_64
            cross: false
    runs-on: ${{ matrix.platform.os }}
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    # ------------ ↓ Cargo のビルドのキャッシュの保存と復元処理 ------------
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ matrix.platform.target }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ matrix.platform.target }}-cargo-registry-
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ matrix.platform.target }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ matrix.platform.target }}-cargo-index-
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: ${{ env.WORKSPACE_DIR }}/target/
        key: ${{ matrix.platform.target }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ matrix.platform.target }}-cargo-build-target-
    # ------------ ↑ Cargo のビルドのキャッシュの保存と復元処理 ------------
    
    - name: Install cargo target
      shell: bash
      run: |
        if ! rustup target list --installed | grep -q '^${{ matrix.platform.target }}$'; then
          rustup target add ${{ matrix.platform.target }}
        else
          echo 'skip this step'
        fi
    - name: Build (Release)
      shell: bash
      run: |
        if ${{ matrix.platform.cross }}; then
          cargo install cross --git https://github.com/cross-rs/cross
          sudo systemctl start docker
          cross build --release --manifest-path ${{ env.WORKSPACE_DIR }}/Cargo.toml --target ${{ matrix.platform.target }}
        else 
          cargo build --release --manifest-path ${{ env.WORKSPACE_DIR }}/Cargo.toml --target ${{ matrix.platform.target }}
        fi
    - name: Upload artifact
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        cp ${{ env.WORKSPACE_DIR }}/target/${{ matrix.platform.target }}/release/gha_test${{ matrix.platform.ext }} ./gha_test-${{ matrix.platform.suffix }}${{ matrix.platform.ext }}
        gh release upload ${{ github.ref_name }} ./gha_test-${{ matrix.platform.suffix }}${{ matrix.platform.ext }}
