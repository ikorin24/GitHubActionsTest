name: Releases

on: 
  push:
    tags:
    - 'v*'

env:
  CARGO_TERM_COLOR: always
  WORKSPACE_DIR: ./rust_ws

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ github.ref_name }} -t "Release ${{ github.ref_name }}"
  publish:
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: ''
            suffix: linux-x86_64
            cross: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            ext: ''
            suffix: linux-arm64
            cross: true
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: ''
            suffix: mac-arm64
            cross: false
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .exe
            suffix: win-x86_64
            cross: false
    runs-on: ${{ matrix.platform.os }}
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    # - name: Install target
    #   shell: bash
    #   run: |
    #     if ! rustup target list --installed | grep -q '^${{ matrix.platform.target }}$'; then
    #       rustup target add ${{ matrix.platform.target }}
    #     else
    #       echo 'skip this step'
    #     fi
    # - name: Install linker
    #   shell: bash
    #   run: |
    #     if [[ "${{ matrix.platform.target }}" == "aarch64-unknown-linux-musl" ]]; then
    #       cargo install cross --git https://github.com/cross-rs/cross
    #       sudo systemctl start docker
    #       cross build --release --manifest-path ${{ env.WORKSPACE_DIR }}/Cargo.toml --target ${{ matrix.platform.target }}
    #     #   sudo apt update
    #     #   sudo apt install gcc-aarch64-linux-gnu -y
    #     #   mkdir -p ${{ env.WORKSPACE_DIR }}/.cargo
    #     #   cat << EOF > ${{ env.WORKSPACE_DIR }}/.cargo/config
    #     # [target.aarch64-unknown-linux-musl]
    #     # linker = "aarch64-linux-gnu-gcc"
    #     # EOF
    #     else
    #       echo 'skip this step'
    #     fi
    - name: Build (Release)
      run: |
        if [[ "${{ matrix.platform.cross }}" == "true" ]]; then
          cargo install cross --git https://github.com/cross-rs/cross
          sudo systemctl start docker
          cross build --release --manifest-path ${{ env.WORKSPACE_DIR }}/Cargo.toml --target ${{ matrix.platform.target }}
        else 
          cargo build --release --manifest-path ${{ env.WORKSPACE_DIR }}/Cargo.toml --target ${{ matrix.platform.target }}
        fi
    - name: Create Release
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        cp ${{ env.WORKSPACE_DIR }}/target/${{ matrix.platform.target }}/release/gha_test${{ matrix.platform.ext }} ./gha_test-${{ matrix.platform.target }}${{ matrix.platform.ext }}
        gh release upload ${{ github.ref_name }} ./gha_test-${{ matrix.platform.target }}${{ matrix.platform.ext }}
