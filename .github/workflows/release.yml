name: Releases

on: 
  push:
    tags:
    - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always
  WORKSPACE_DIR: ./rust_ws

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ github.ref_name }} --generate-notes
  build_and_upload:
    needs: create_release
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: ''
            suffix: linux-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: ''
            suffix: mac-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .exe
            suffix: win-x86_64
    runs-on: ${{ matrix.platform.os }}
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/cache_cargo
      with:
        target: ${{ matrix.platform.target }}
        workspace: ${{ env.WORKSPACE_DIR }}
    - uses: ./.github/actions/install_target_triple
      with:
        target: ${{ matrix.platform.target }}
    - name: Build (Release)
      shell: bash
      run: |
        cargo build --release --manifest-path ${{ env.WORKSPACE_DIR }}/Cargo.toml --target ${{ matrix.platform.target }}
    - name: Upload artifact
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        cp ${{ env.WORKSPACE_DIR }}/target/${{ matrix.platform.target }}/release/gha_test${{ matrix.platform.ext }} ./gha_test-${{ matrix.platform.suffix }}${{ matrix.platform.ext }}
        gh release upload ${{ github.ref_name }} ./gha_test-${{ matrix.platform.suffix }}${{ matrix.platform.ext }}
